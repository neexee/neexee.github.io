<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Picky speaker</title>
    <link>https://neexee.github.io/posts-en/</link>
    <description>Recent content on Picky speaker</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 10 Jul 2019 11:12:50 +0700</lastBuildDate>
    
	<atom:link href="https://neexee.github.io/posts-en/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>PocketBook Quote Export</title>
      <link>https://neexee.github.io/posts-en/pocketbook-quotes/pocketbook-quotes/</link>
      <pubDate>Sat, 05 Oct 2019 20:23:53 +0700</pubDate>
      
      <guid>https://neexee.github.io/posts-en/pocketbook-quotes/pocketbook-quotes/</guid>
      <description>It&amp;rsquo;s painful to take out quotes from PocketBook using PocketBook itself. The interface is slow and the default reader app (the best one in my opinion) has no option for bulk imports of quotes.
So I wrote a simple script to extract &amp;amp; transform quotes from the internal PocketBook DB.
The PocketBook database schema   The quote extractor You may want to change the default path of the DB, filter_quote, transform_quote and print_results.</description>
    </item>
    
    <item>
      <title>Seeking Wisdom: From Darwin To Munger</title>
      <link>https://neexee.github.io/posts-en/seeking-wisdom/</link>
      <pubDate>Thu, 03 Oct 2019 21:18:43 +0700</pubDate>
      
      <guid>https://neexee.github.io/posts-en/seeking-wisdom/</guid>
      <description>&amp;ldquo;I read it in the New England Journal of Medicine, so it must be correct&amp;rdquo;.
Names and reputation influence us. And symbols of power or status like titles, possessions, rank, uniforms, or a nice suit and tie. For example, in one study 22 hospital nurses got a telephone call from an unknown physician and were ordered to administer an obvious overdose of an unauthorized drug. All but one nurse obeyed.</description>
    </item>
    
    <item>
      <title>Antifragile</title>
      <link>https://neexee.github.io/posts-en/antifragile/</link>
      <pubDate>Sun, 08 Sep 2019 14:26:47 +0700</pubDate>
      
      <guid>https://neexee.github.io/posts-en/antifragile/</guid>
      <description>Awesome book. It alleviated some of my scariest anxieties.
Future anxiety. Before I read it I thought I would miss something new if I&amp;rsquo;m not going to read about new shiny things every day. Turns out, new developments are not that important. People cannot solve the same problems for centuries, so it&amp;rsquo;s better to read classics to anticipate future.
Health anxiety. Health is complex. Doctors don&amp;rsquo;t know much about it and almost always create problems on the long run.</description>
    </item>
    
    <item>
      <title>The beauty of typed Python</title>
      <link>https://neexee.github.io/posts-en/python-typehints/</link>
      <pubDate>Wed, 10 Jul 2019 11:12:50 +0700</pubDate>
      
      <guid>https://neexee.github.io/posts-en/python-typehints/</guid>
      <description>Here&amp;rsquo;s an example of typed Python.
import itertools from typing import Callable, Iterable, List, Tuple, TypeVar A = TypeVar(&amp;#39;A&amp;#39;) B = TypeVar(&amp;#39;B&amp;#39;) def groupby_eager(iterable: Iterable[A], key: Callable[[A], B]) -&amp;gt; List[Tuple[B, List[A]]]: groups = itertools.groupby(sorted(iterable, key=key), key=key) return [ (group_name, list(group)) for group_name, group in groups ]</description>
    </item>
    
  </channel>
</rss>