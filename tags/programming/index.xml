<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>programming on Picky speaker</title>
    <link>https://neexee.github.io/tags/programming/</link>
    <description>Recent content in programming on Picky speaker</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 05 Oct 2019 20:23:53 +0700</lastBuildDate>
    
	<atom:link href="https://neexee.github.io/tags/programming/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>PocketBook Quote Export</title>
      <link>https://neexee.github.io/posts-en/pocketbook-quotes/</link>
      <pubDate>Sat, 05 Oct 2019 20:23:53 +0700</pubDate>
      
      <guid>https://neexee.github.io/posts-en/pocketbook-quotes/</guid>
      <description>It&amp;rsquo;s painful to take out quotes from PocketBook using PocketBook itself. The interface is slow and the default reader app (the best one in my opinion) has no option for bulk imports of quotes.
So I wrote a simple script to extract &amp;amp; transform quotes from the internal PocketBook DB.
The PocketBook database schema   The quote extractor You may want to change the default path of the DB, filter_quote, transform_quote and print_results.</description>
    </item>
    
    <item>
      <title>The beauty of typed Python</title>
      <link>https://neexee.github.io/posts-en/python-typehints/</link>
      <pubDate>Wed, 10 Jul 2019 11:12:50 +0700</pubDate>
      
      <guid>https://neexee.github.io/posts-en/python-typehints/</guid>
      <description>Here&amp;rsquo;s an example of typed Python.
import itertools from typing import Callable, Iterable, List, Tuple, TypeVar A = TypeVar(&amp;#39;A&amp;#39;) B = TypeVar(&amp;#39;B&amp;#39;) def groupby_eager(iterable: Iterable[A], key: Callable[[A], B]) -&amp;gt; List[Tuple[B, List[A]]]: groups = itertools.groupby(sorted(iterable, key=key), key=key) return [ (group_name, list(group)) for group_name, group in groups ]</description>
    </item>
    
    <item>
      <title>Системные вызовы UNIX</title>
      <link>https://neexee.github.io/posts-ru/operating-systems-nsu/</link>
      <pubDate>Fri, 08 Feb 2019 10:48:58 +0700</pubDate>
      
      <guid>https://neexee.github.io/posts-ru/operating-systems-nsu/</guid>
      <description>Что это В 2019 году я вёл курс ОС в НГУ. Это шпаргалка с примерными темами для разговора со студентами. Задачки здесь.
К сожалению, у меня не было времени написать шпаргалку для всех лаб, но примерно до десятой добралось мало студентов. И к тому времени они уже представляли, что я могу от них захотеть.
Правила
 Cпрашиваю рандомные вопросы, поэтому лучше знать все ответы знать заранее. Курсивом выделено то, что я гарантированно спрошу у каждого.</description>
    </item>
    
    <item>
      <title>Чем можно заняться первокурснику?</title>
      <link>https://neexee.github.io/posts-ru/informatics-interesting/</link>
      <pubDate>Sat, 22 Dec 2018 11:23:41 +0700</pubDate>
      
      <guid>https://neexee.github.io/posts-ru/informatics-interesting/</guid>
      <description>Что это? Это неформальный ответ на вопрос «У меня много лишнего времени, чем можно заняться?». Услышал я его от первокурсника.
Читать материалы курса Темы в табличку я вставлял не для того, чтобы морочить тебе голову. Любая ссылка оттуда очень интересная и полезная (если разбираться в теме не для галочки или в поисках копипасты для слайдов). В моём рассказе с первой пары тоже целая куча ссылок на качественные и интересные ресурсы.</description>
    </item>
    
    <item>
      <title>Вопросы о параллельном программировании</title>
      <link>https://neexee.github.io/posts-ru/operating-systems-multithreading/</link>
      <pubDate>Sun, 23 Sep 2018 10:40:02 +0700</pubDate>
      
      <guid>https://neexee.github.io/posts-ru/operating-systems-multithreading/</guid>
      <description>Что это В 2018 году я вёл практикум «Многопоточное программирование» в НГУ. Это шпаргалка с темами для разговора со студентами. Список задач
Лабораторные 1-4  Что такое поток, как он выглядит в памяти? Чем отличаются процесс и поток? Чем отличаются fork() и pthread_create()? Как ОС выделяет процессорное время для потоков и процессов? Планировщик по-разному относится к потокам и процессам? Можно ли сделать свой собственный планировщик потоков (в обход ОС)? Это где-нибудь применяется?</description>
    </item>
    
  </channel>
</rss>