<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>★★★★★ on Picky speaker</title>
    <link>https://neexee.github.io/tags/%E2%98%85%E2%98%85%E2%98%85%E2%98%85%E2%98%85/</link>
    <description>Recent content in ★★★★★ on Picky speaker</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 10 Apr 2021 11:24:59 +0700</lastBuildDate>
    
	<atom:link href="https://neexee.github.io/tags/%E2%98%85%E2%98%85%E2%98%85%E2%98%85%E2%98%85/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>The Beginning of Infinity: Explanations That Transform the World</title>
      <link>https://neexee.github.io/posts-en/beginning-of-infinity/</link>
      <pubDate>Sat, 10 Apr 2021 11:24:59 +0700</pubDate>
      
      <guid>https://neexee.github.io/posts-en/beginning-of-infinity/</guid>
      <description>It&amp;rsquo;s a very wide mix of explanations about computation, biology, physics, creativity, politics, and philosophy. The explanations are pretty deep, so they explain an infinite number of phenomena. So they stand at the beginning of infinity.
The book resolved many questions for me. For example:
 What is optimism? How much a human can understand? How far we can go exploring the Universe? How to make a successful meme? Why don&amp;rsquo;t we have AI yet?</description>
    </item>
    
    <item>
      <title>37 Things One Architect Knows</title>
      <link>https://neexee.github.io/posts-en/37-things-one-architect-knows/</link>
      <pubDate>Sat, 02 Jan 2021 15:34:16 +0700</pubDate>
      
      <guid>https://neexee.github.io/posts-en/37-things-one-architect-knows/</guid>
      <description>This is how senior IT architects and CTOs understand change. To me, it&amp;rsquo;s a pretty unusual point of view. It explains the roles and qualities of an architect in a large enterprise, and how to train yourself to achieve those qualities. It includes expert advice on how to explain stuff, draw diagrams, examine architecture, to name a few.
The book is not about systems architecture.
The writing is superb, it&amp;rsquo;s super easy to read and profound at the same time.</description>
    </item>
    
    <item>
      <title>Securing DevOps: Security in the Cloud</title>
      <link>https://neexee.github.io/posts-en/securing-devops/</link>
      <pubDate>Sun, 16 Aug 2020 15:12:10 +0700</pubDate>
      
      <guid>https://neexee.github.io/posts-en/securing-devops/</guid>
      <description>I cannot say anything bad about this book, only good. It&amp;rsquo;s full of quality content and it&amp;rsquo;s a joy to read. Title says for itself, it&amp;rsquo;s a book for DevOps engineer. But I would recommend it to anyone who&amp;rsquo;s just slightly interested in security, clouds or CI/CD. The author builds a CI/CD pipeline throughout first part of the book and explains useful security practices in the rest of the book. It has many real-life examples and many very good explanations.</description>
    </item>
    
    <item>
      <title>SQL Performance Explained</title>
      <link>https://neexee.github.io/posts-en/sql-performance-explained/</link>
      <pubDate>Sat, 11 Apr 2020 12:51:04 +0700</pubDate>
      
      <guid>https://neexee.github.io/posts-en/sql-performance-explained/</guid>
      <description>It&amp;rsquo;s short and very well-written. It&amp;rsquo;s the most valuable read on SQL I&amp;rsquo;ve ever seen. The book is available online.
The most important thing for backend developers is &amp;ldquo;Do NOT use OFFSET for pagination&amp;rdquo;.
Powers of indexing:
 The B-Tree traversal. It could be traversed in any direction as leaf nodes are organized in a double linked list. Clustering. Similar data is close, especially if it&amp;rsquo;s an index-only scan.</description>
    </item>
    
    <item>
      <title>The Essential Alan Watts</title>
      <link>https://neexee.github.io/posts-en/essential-watts/</link>
      <pubDate>Wed, 15 Jan 2020 16:51:07 +0700</pubDate>
      
      <guid>https://neexee.github.io/posts-en/essential-watts/</guid>
      <description>A collection of masterpieces. Watts discusses important concepts and he goes pretty deep. Important concepts are time, Universe, God, work, ego and death. There&amp;rsquo;s no dogmatic bullshit, just a call to try to see things differently.
Sadly, I already knew most of the content from other sources. I wish I could erase my memory and read it as a completely mind-blowing book. Examples of main ideas? Past doesn&amp;rsquo;t exist. You don&amp;rsquo;t exist.</description>
    </item>
    
    <item>
      <title>How to Win Friends and Influence People</title>
      <link>https://neexee.github.io/posts-en/how-to-win-friends/</link>
      <pubDate>Sat, 11 Jan 2020 21:27:44 +0700</pubDate>
      
      <guid>https://neexee.github.io/posts-en/how-to-win-friends/</guid>
      <description>It has great overview of techniques for non-toxic conversations but it&amp;rsquo;s a little bit dangerous and shallow. I was walking around it for years and was afraid it&amp;rsquo;s a collection of insecure tricks for used car salesmans. It&amp;rsquo;s easy to read and there&amp;rsquo;s a lot of examples from lives of famous (and not-so-famous) people. So it&amp;rsquo;s a worthy read if you just want to entertain yourself.
What do I mean by dangerous?</description>
    </item>
    
    <item>
      <title>Developer Hegemony: The Future of Labor</title>
      <link>https://neexee.github.io/posts-en/developer-hegemony/</link>
      <pubDate>Sun, 01 Dec 2019 12:54:48 +0700</pubDate>
      
      <guid>https://neexee.github.io/posts-en/developer-hegemony/</guid>
      <description>Totally worth your time, especially if you&amp;rsquo;re knowledge worker and you feel like grunt from time to time. I expected the book to be a little bit crazy but it isn&amp;rsquo;t. The entire corporation-driven sector of the IT industry is crazy instead.
This book is an in-depth version of Don&amp;rsquo;t Call Yourself A Programmer article, one of my favourites. And by &amp;ldquo;in-depth&amp;rdquo; I mean really deep dive into the delusion of &amp;ldquo;real programmer&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>The Tangled Web: A Guide to Securing Modern Web Applications</title>
      <link>https://neexee.github.io/posts-en/the-tangled-web/</link>
      <pubDate>Mon, 04 Nov 2019 13:35:10 +0700</pubDate>
      
      <guid>https://neexee.github.io/posts-en/the-tangled-web/</guid>
      <description>Awesome book, joy to read. It&amp;rsquo;s dense, but written in a cheerful tone. The author knows a lot about web security. It&amp;rsquo;s not bound to a narrow set of technologies, frameworks, OSes or browsers. It touches a little bit of everything. But it doesn&amp;rsquo;t make it shallow. I wasn&amp;rsquo;t aware about 90% of information presented in this book. It has no cumbersome and useless terms security charlatans like. It&amp;rsquo;s very practical and full of advice.</description>
    </item>
    
    <item>
      <title>Release it! Second edition</title>
      <link>https://neexee.github.io/posts-en/release-it/</link>
      <pubDate>Tue, 09 Oct 2018 14:26:47 +0700</pubDate>
      
      <guid>https://neexee.github.io/posts-en/release-it/</guid>
      <description>Faults and cracks:
 Fault. A condition that creates an incorrect internal state in your software. A fault may be due to a latent bug that gets triggered, or it may be due to an unchecked condition at a boundary or external interface. Error. Visibly incorrect behavior. When your trading system suddenly buys ten billion dollars of Pokemon futures, that is an error. Failure. An unresponsive system. When a system doesn’t respond, we say it has failed.</description>
    </item>
    
  </channel>
</rss>