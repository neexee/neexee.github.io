<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>research on Picky speaker</title>
    <link>https://neexee.github.io/tags/research/</link>
    <description>Recent content in research on Picky speaker</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 05 Jul 2021 21:00:16 +0700</lastBuildDate>
    
	<atom:link href="https://neexee.github.io/tags/research/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Error Wrapping Guideline for Go</title>
      <link>https://neexee.github.io/posts-en/wrapping-errors-in-go/</link>
      <pubDate>Mon, 05 Jul 2021 21:00:16 +0700</pubDate>
      
      <guid>https://neexee.github.io/posts-en/wrapping-errors-in-go/</guid>
      <description>Imagine a situation. You&amp;rsquo;re having a backend serving music. It has an API level, some domain logic, and storage. You have different kinds of entities in the API (tracks, playlists, and so on) and you need some way to filter them. There&amp;rsquo;s a lot of entities stored in the storage so you have to invent a paging strategy for them.
That&amp;rsquo;s what you probably come up with for client requests:</description>
    </item>
    
    <item>
      <title>Pragmatic Approach to Error Handling</title>
      <link>https://neexee.github.io/posts-en/error-handling-manual/</link>
      <pubDate>Mon, 05 Jul 2021 19:31:06 +0700</pubDate>
      
      <guid>https://neexee.github.io/posts-en/error-handling-manual/</guid>
      <description>Consider this classic question, raised in the context of Go and API compatibility:
#golang friends, here&amp;#39;s a fun one
v1: func Process() error { return ErrFoo }
v2: func Process() error { return ErrBar }
Did I break API compatibility? Do I need to bump the major version?
&amp;mdash; ✕✕✕✕✕ (@peterbourgon) July 4, 2021  The responses split 50&amp;frasl;50, but I don&amp;rsquo;t think it should be like this if you are aware of one simple thing:</description>
    </item>
    
  </channel>
</rss>